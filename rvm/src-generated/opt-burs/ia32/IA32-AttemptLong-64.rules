#####
# ATTEMPT_LONG (atomic compare-exchange)
#####
r:	ATTEMPT_LONG(rlv, OTHER_OPERAND(rlv, OTHER_OPERAND(rlv, rlv)))
67
EMIT_INSTRUCTION
ATTEMPT_LONG(Attempt.getClearResult(P(p)), \\
              MO(Attempt.getClearAddress(P(p)), Attempt.getClearOffset(P(p)), QW, Attempt.getClearLocation(P(p)), Attempt.getClearGuard(P(p))), \\
              Attempt.getClearOldValue(P(p)), Attempt.getClearNewValue(P(p)));

r:	ATTEMPT_LONG(r, OTHER_OPERAND(address1scaledreg, OTHER_OPERAND(rlv, rlv)))
67
EMIT_INSTRUCTION
augmentAddress(Attempt.getClearAddress(P(p))); \\
ATTEMPT_LONG(Attempt.getClearResult(P(p)), \\
              consumeAddress(QW, Attempt.getClearLocation(P(p)), Attempt.getClearGuard(P(p))), \\
              Attempt.getClearOldValue(P(p)), Attempt.getClearNewValue(P(p)));

r:	ATTEMPT_LONG(address1scaledreg, OTHER_OPERAND(r, OTHER_OPERAND(rlv, rlv)))
67
EMIT_INSTRUCTION
augmentAddress(Attempt.getOffset(P(p))); \\
ATTEMPT_LONG(Attempt.getClearResult(P(p)), \\
              consumeAddress(QW, Attempt.getClearLocation(P(p)), Attempt.getClearGuard(P(p))), \\
              Attempt.getClearOldValue(P(p)), Attempt.getClearNewValue(P(p)));

r:	ATTEMPT_LONG(address1scaledreg, OTHER_OPERAND(address1reg, OTHER_OPERAND(rlv, rlv)))
67
EMIT_INSTRUCTION
combineAddresses(); \\
ATTEMPT_LONG(Attempt.getClearResult(P(p)), \\
              consumeAddress(QW, Attempt.getClearLocation(P(p)), Attempt.getClearGuard(P(p))), \\
              Attempt.getClearOldValue(P(p)), Attempt.getClearNewValue(P(p)));

r:	ATTEMPT_LONG(address1reg, OTHER_OPERAND(address1scaledreg, OTHER_OPERAND(rlv, rlv)))
67
EMIT_INSTRUCTION
combineAddresses(); \\
ATTEMPT_LONG(Attempt.getClearResult(P(p)), \\
              consumeAddress(QW, Attempt.getClearLocation(P(p)), Attempt.getClearGuard(P(p))), \\
              Attempt.getClearOldValue(P(p)), Attempt.getClearNewValue(P(p)));

r:	ATTEMPT_LONG(address, OTHER_OPERAND(LONG_CONSTANT, OTHER_OPERAND(rlv, rlv)))
67
EMIT_INSTRUCTION
augmentAddress(Attempt.getOffset(P(p))); \\
ATTEMPT_LONG(Attempt.getClearResult(P(p)), \\
              consumeAddress(QW, Attempt.getClearLocation(P(p)), Attempt.getClearGuard(P(p))), \\
              Attempt.getClearOldValue(P(p)), Attempt.getClearNewValue(P(p)));

r:	ATTEMPT_LONG(LONG_CONSTANT, OTHER_OPERAND(address, OTHER_OPERAND(rlv, rlv)))
67
EMIT_INSTRUCTION
augmentAddress(Attempt.getClearAddress(P(p))); \\
ATTEMPT_LONG(Attempt.getClearResult(P(p)), \\
              consumeAddress(QW, Attempt.getClearLocation(P(p)), Attempt.getClearGuard(P(p))), \\
              Attempt.getClearOldValue(P(p)), Attempt.getClearNewValue(P(p)));

stm:	INT_IFCMP(ATTEMPT_LONG(rlv, OTHER_OPERAND(rlv, OTHER_OPERAND(rlv,rlv))),INT_CONSTANT)
isZERO(VR(p), 54)
EMIT_INSTRUCTION
ATTEMPT_LONG_IFCMP(MO(Attempt.getClearAddress(PL(p)), Attempt.getOffset(PL(p)), QW, Attempt.getClearLocation(PL(p)), Attempt.getClearGuard(PL(p))), \\
	            Attempt.getClearOldValue(PL(p)), Attempt.getClearNewValue(PL(p)), \\
		    IfCmp.getCond(P(p)).flipCode(), IfCmp.getClearTarget(P(p)), IfCmp.getClearBranchProfile(P(p)));

stm:	INT_IFCMP(ATTEMPT_LONG(r, OTHER_OPERAND(address1scaledreg, OTHER_OPERAND(rlv,rlv))),INT_CONSTANT)
isZERO(VR(p), 54)
EMIT_INSTRUCTION
augmentAddress(Attempt.getClearAddress(PL(p))); \\
ATTEMPT_LONG_IFCMP(consumeAddress(QW, Attempt.getClearLocation(PL(p)), Attempt.getClearGuard(PL(p))), \\
	            Attempt.getClearOldValue(PL(p)), Attempt.getClearNewValue(PL(p)), \\
		    IfCmp.getCond(P(p)).flipCode(), IfCmp.getClearTarget(P(p)), IfCmp.getClearBranchProfile(P(p)));

stm:	INT_IFCMP(ATTEMPT_LONG(address1scaledreg, OTHER_OPERAND(r, OTHER_OPERAND(rlv,rlv))),INT_CONSTANT)
isZERO(VR(p), 54)
EMIT_INSTRUCTION
augmentAddress(Attempt.getOffset(PL(p))); \\
ATTEMPT_LONG_IFCMP(consumeAddress(QW, Attempt.getClearLocation(PL(p)), Attempt.getClearGuard(PL(p))), \\
	            Attempt.getClearOldValue(PL(p)), Attempt.getClearNewValue(PL(p)), \\
		    IfCmp.getCond(P(p)).flipCode(), IfCmp.getClearTarget(P(p)), IfCmp.getClearBranchProfile(P(p)));

stm:	INT_IFCMP(ATTEMPT_LONG(address1scaledreg, OTHER_OPERAND(address1reg, OTHER_OPERAND(rlv,rlv))),INT_CONSTANT)
isZERO(VR(p),54)
EMIT_INSTRUCTION
combineAddresses(); \\
ATTEMPT_LONG_IFCMP(consumeAddress(QW, Attempt.getClearLocation(PL(p)), Attempt.getClearGuard(PL(p))), \\
	            Attempt.getClearOldValue(PL(p)), Attempt.getClearNewValue(PL(p)), \\
		    IfCmp.getCond(P(p)).flipCode(), IfCmp.getClearTarget(P(p)), IfCmp.getClearBranchProfile(P(p)));

stm:	INT_IFCMP(ATTEMPT_LONG(address1reg, OTHER_OPERAND(address1scaledreg, OTHER_OPERAND(rlv,rlv))),INT_CONSTANT)
isZERO(VR(p),54)
EMIT_INSTRUCTION
combineAddresses(); \\
ATTEMPT_LONG_IFCMP(consumeAddress(QW, Attempt.getClearLocation(PL(p)), Attempt.getClearGuard(PL(p))), \\
	            Attempt.getClearOldValue(PL(p)), Attempt.getClearNewValue(PL(p)), \\
		    IfCmp.getCond(P(p)).flipCode(), IfCmp.getClearTarget(P(p)), IfCmp.getClearBranchProfile(P(p)));

stm:	INT_IFCMP(ATTEMPT_LONG(address, OTHER_OPERAND(LONG_CONSTANT, OTHER_OPERAND(rlv,rlv))),INT_CONSTANT)
isZERO(VR(p), 54)
EMIT_INSTRUCTION
augmentAddress(Attempt.getOffset(PL(p))); \\
ATTEMPT_LONG_IFCMP(consumeAddress(QW, Attempt.getClearLocation(PL(p)), Attempt.getClearGuard(PL(p))), \\
	            Attempt.getClearOldValue(PL(p)), Attempt.getClearNewValue(PL(p)), \\
		    IfCmp.getCond(P(p)).flipCode(), IfCmp.getClearTarget(P(p)), IfCmp.getClearBranchProfile(P(p)));

stm:	INT_IFCMP(ATTEMPT_LONG(LONG_CONSTANT, OTHER_OPERAND(address, OTHER_OPERAND(rlv,rlv))),INT_CONSTANT)
isZERO(VR(p),54)
EMIT_INSTRUCTION
augmentAddress(Attempt.getClearAddress(PL(p))); \\
ATTEMPT_LONG_IFCMP(consumeAddress(QW, Attempt.getClearLocation(PL(p)), Attempt.getClearGuard(PL(p))), \\
	            Attempt.getClearOldValue(PL(p)), Attempt.getClearNewValue(PL(p)), \\
		    IfCmp.getCond(P(p)).flipCode(), IfCmp.getClearTarget(P(p)), IfCmp.getClearBranchProfile(P(p)));

stm:	INT_IFCMP(ATTEMPT_LONG(rlv, OTHER_OPERAND(rlv, OTHER_OPERAND(rlv,rlv))), INT_CONSTANT)
isONE(VR(p), 54)
EMIT_INSTRUCTION
ATTEMPT_LONG_IFCMP(MO(Attempt.getClearAddress(PL(p)), Attempt.getOffset(PL(p)), QW, Attempt.getClearLocation(PL(p)), Attempt.getClearGuard(PL(p))), \\
	            Attempt.getClearOldValue(PL(p)), Attempt.getClearNewValue(PL(p)), \\
		    IfCmp.getCond(P(p)), IfCmp.getClearTarget(P(p)), IfCmp.getClearBranchProfile(P(p)));

stm:	INT_IFCMP(ATTEMPT_LONG(r, OTHER_OPERAND(address1scaledreg, OTHER_OPERAND(rlv,rlv))),INT_CONSTANT)
isONE(VR(p), 54)
EMIT_INSTRUCTION
augmentAddress(Attempt.getClearAddress(PL(p))); \\
ATTEMPT_LONG_IFCMP(consumeAddress(QW, Attempt.getClearLocation(PL(p)), Attempt.getClearGuard(PL(p))), \\
	            Attempt.getClearOldValue(PL(p)), Attempt.getClearNewValue(PL(p)), \\
		    IfCmp.getCond(P(p)), IfCmp.getClearTarget(P(p)), IfCmp.getClearBranchProfile(P(p)));

stm:	INT_IFCMP(ATTEMPT_LONG(address1scaledreg, OTHER_OPERAND(r, OTHER_OPERAND(rlv,rlv))),INT_CONSTANT)
isONE(VR(p), 54)
EMIT_INSTRUCTION
augmentAddress(Attempt.getOffset(PL(p))); \\
ATTEMPT_LONG_IFCMP(consumeAddress(QW, Attempt.getClearLocation(PL(p)), Attempt.getClearGuard(PL(p))), \\
	            Attempt.getClearOldValue(PL(p)), Attempt.getClearNewValue(PL(p)), \\
		    IfCmp.getCond(P(p)), IfCmp.getClearTarget(P(p)), IfCmp.getClearBranchProfile(P(p)));

stm:	INT_IFCMP(ATTEMPT_LONG(address1scaledreg, OTHER_OPERAND(address1reg, OTHER_OPERAND(rlv,rlv))),INT_CONSTANT)
isONE(VR(p), 54)
EMIT_INSTRUCTION
combineAddresses(); \\
ATTEMPT_LONG_IFCMP(consumeAddress(QW, Attempt.getClearLocation(PL(p)), Attempt.getClearGuard(PL(p))), \\
	            Attempt.getClearOldValue(PL(p)), Attempt.getClearNewValue(PL(p)), \\
		    IfCmp.getCond(P(p)), IfCmp.getClearTarget(P(p)), IfCmp.getClearBranchProfile(P(p)));

stm:	INT_IFCMP(ATTEMPT_LONG(address1reg, OTHER_OPERAND(address1scaledreg, OTHER_OPERAND(rlv,rlv))),INT_CONSTANT)
isONE(VR(p), 54)
EMIT_INSTRUCTION
combineAddresses(); \\
ATTEMPT_LONG_IFCMP(consumeAddress(QW, Attempt.getClearLocation(PL(p)), Attempt.getClearGuard(PL(p))), \\
	            Attempt.getClearOldValue(PL(p)), Attempt.getClearNewValue(PL(p)), \\
		    IfCmp.getCond(P(p)), IfCmp.getClearTarget(P(p)), IfCmp.getClearBranchProfile(P(p)));

stm:	INT_IFCMP(ATTEMPT_LONG(address, OTHER_OPERAND(LONG_CONSTANT, OTHER_OPERAND(rlv,rlv))),INT_CONSTANT)
isONE(VR(p), 54)
EMIT_INSTRUCTION
augmentAddress(Attempt.getOffset(PL(p))); \\
ATTEMPT_LONG_IFCMP(consumeAddress(QW, Attempt.getClearLocation(PL(p)), Attempt.getClearGuard(PL(p))), \\
	            Attempt.getClearOldValue(PL(p)), Attempt.getClearNewValue(PL(p)), \\
		    IfCmp.getCond(P(p)), IfCmp.getClearTarget(P(p)), IfCmp.getClearBranchProfile(P(p)));

stm:	INT_IFCMP(ATTEMPT_LONG(LONG_CONSTANT, OTHER_OPERAND(address, OTHER_OPERAND(rlv,rlv))),INT_CONSTANT)
isONE(VR(p), 54)
EMIT_INSTRUCTION
augmentAddress(Attempt.getClearAddress(PL(p))); \\
ATTEMPT_LONG_IFCMP(consumeAddress(QW, Attempt.getClearLocation(PL(p)), Attempt.getClearGuard(PL(p))), \\
	            Attempt.getClearOldValue(PL(p)), Attempt.getClearNewValue(PL(p)), \\
		    IfCmp.getCond(P(p)), IfCmp.getClearTarget(P(p)), IfCmp.getClearBranchProfile(P(p)));

